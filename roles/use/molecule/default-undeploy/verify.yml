---
- name: Verify - Undeploy
  hosts: k3s_server
  run_once: yes
  gather_facts: no
  vars:
    ansible_libvirt_uri: >-
      {% if hostvars[groups['hypervisor'] | first].ansible_connection == 'ssh' %}qemu+ssh://{{ hostvars[groups['hypervisor'] | first].ansible_user }}@{{ hostvars[groups['hypervisor'] | first].ansible_host }}/system{% else %}qemu:///system{% endif %}
    ansible_connection: "community.libvirt.libvirt_qemu"
  become: yes
  serial: "{{ lookup('env', 'ANSIBLE_SERIAL') }}"
  tasks:
    - name: Include vars file
      include_vars:
        file: ./vars/main.yml

    - name: Get Namespace
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Namespace
        name: "{{ service_id }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: ns_info
      until: ns_info.resources | length == 0
      retries: 60

    - assert:
        that: ns_info.resources | length == 0

    - name: Get Service
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: "{{ service_id }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: service_info

    - assert:
        that: service_info.resources | length == 0

    - name: Get Deployment
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        namespace: "{{ service_id }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: deployment_info

    - assert:
        that: deployment_info.resources | length == 0

    - name: Get PVC
      kubernetes.core.k8s_info:
        api_version: v1
        kind: PersistentVolumeClaim
        namespace: "{{ service_id }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: pvc_info

    - assert:
        that: pvc_info.resources | length == 0